# This action builds a docker image and deploys it to a registry, it uses the following steps:
# 1. Checks out the repo
# 2. Reads the .env file into a variable
# 3. Installs buildx
# 4. Builds the image and deploys it.
#
# Dependencies:
# 1. A .env file with specif parameters, e.g.:
#   SERVICE=landing_page
#   REGISTRY=registry.docker.libis.be
#   NAMESPACE=lirias
#   PLATFORM=linux/amd64
#   VERSION=0.8.0


name: Build and Deploy

on:
  workflow_call:
    secrets:
      username:
        required: true
      password:
        required: true

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Check out the repo
        uses: actions/checkout@v3
      - 
        name: Dotenv Action
        id: dotenv
        uses: falti/dotenv-action@v1.0.2
        with:
          log-variables: true
      -
        name: Archive config files
        run: | 
          if [ -d ./config ]; then  #if the directory exists then we need to zip it
            tar zcvf config.tgz ./config/*
          fi
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: registry.docker.libis.be
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.4.0
      - 
        name: Build and push Docker image
        uses: docker/build-push-action@v3.3.0    #https://github.com/docker/build-push-action
        with:
          file: Dockerfile
          platforms: ${{ steps.dotenv.outputs.platform }}
          build-args: VERSION=${{ steps.dotenv.outputs.version }}
          context: .
          push: true
          tags: | 
            ${{ steps.dotenv.outputs.registry }}/${{ steps.dotenv.outputs.namespace }}/${{ steps.dotenv.outputs.service }}:${{ steps.dotenv.outputs.version }}
            ${{ steps.dotenv.outputs.registry }}/${{ steps.dotenv.outputs.namespace }}/${{ steps.dotenv.outputs.service }}:latest
          provenance: false
